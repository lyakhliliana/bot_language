package utils

import com.bot4s.telegram.models.{InlineKeyboardButton, InlineKeyboardMarkup}
import database.Words

import scala.annotation.tailrec

object Phrases {
  def getStartMessage(username: String): String = {
    s"""
       |–ü—Ä–∏–≤–µ—Ç, $username!
       |
       |–î–ª—è –ø–µ—Ä–µ–≤–æ–¥–∞ –Ω—É–∂–Ω–æ:
       |* –Ω–∞–ø–∏—Å–∞—Ç—å —Å–≤–æ–µ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ –Ω–∞ —Ä—É—Å—Å–∫–æ–º —è–∑—ã–∫–µ
       |* –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å —Å–∏–Ω—Ç–∞–∫—Å–∏—Å /translate <—Ñ—Ä–∞–∑–∞>
       |
       |–ï—Å–ª–∏ –Ω—É–∂–Ω–∞ –Ω–µ–±–æ–ª—å—à–∞—è –∏—Å—Ç–æ—Ä–∏—è –≤–≤–µ–¥–µ–Ω–Ω—ã—Ö —Å–ª–æ–≤, —Ç–æ –ø—Ä–æ—Å—Ç–æ –Ω–∞–ø–∏—à–∏ "/commands" üëÄ
            """.stripMargin
  }

  def getErrorUsernameMessage: String = "–û—à–∏–±–æ—á–∫–∞. –ß—Ç–æ-—Ç–æ –Ω–µ —Ç–∞–∫ —Å —Ç–≤–æ–∏–º –∏–º–µ–Ω–µ–º \uD83E\uDD79"

  def getTranslateEmptyInputMessage: String = "–ù–∞–ø–∏—à–∏ —Ö–æ—Ç—å —á—Ç–æ-—Ç–æ –ø–æ—Å–ª–µ –∫–æ–º–∞–Ω–¥—ã –¥–ª—è –ø–µ—Ä–µ–≤–æ–¥–∞\uD83E\uDD96"

  def getUnknownErrorMessage: String = "–ß—Ç–æ-—Ç–æ –ø–æ—à–ª–æ –Ω–µ —Ç–∞–∫ \uD83E\uDEB4"

  def getCommandMessage(username: String): String = s"""$username, –≤—ã–±–µ—Ä–∏ –∫–æ–º–∞–Ω–¥—É –∏–∑ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–Ω—ã—Öü™¥"""

  def getFullHelpMessage: String = {
    s"""
       |–î–ª—è –ø–µ—Ä–µ–≤–æ–¥–∞ –Ω—É–∂–Ω–æ:
       |* –Ω–∞–ø–∏—Å–∞—Ç—å —Å–≤–æ–µ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ –Ω–∞ —Ä—É—Å—Å–∫–æ–º —è–∑—ã–∫–µ
       |* –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å —Å–∏–Ω—Ç–∞–∫—Å–∏—Å /translate <—Ñ—Ä–∞–∑–∞>
       |
       |–î–ª—è –≤—ã–≤–æ–¥–∞ –∏—Å—Ç–æ—Ä–∏–∏ –∑–∞–ø—Ä–æ—Å–æ–≤:
       |* –Ω–∞–ø–∏—Å–∞—Ç—å "/commands" –∏ –≤—ã–±—Ä–∞—Ç—å —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω—É—é –∫–Ω–æ–ø–∫—É)
              """.stripMargin
  }

  def getStatisticsMessage(list: List[Words]): String = {
    if (list.isEmpty) "–¢—É—Ç –Ω–∏—á–µ–≥–æ –Ω–µ—Ç\uD83D\uDE22"
    else {
      @tailrec
      def rec(str: String, i: Int, list: List[Words]): String =
        list match {
          case head :: tail => rec(str + s"""$i) ${head.first} --- ${head.second}\n""", i + 1, tail)
          case Nil          => str
        }
      val head = "–ü–æ—Å–ª–µ–¥–Ω–∏–µ –ø–µ—Ä–µ–≤–µ–¥–µ–Ω–Ω—ã–µ —Å–ª–æ–≤–∞:\n"
      rec(head, 1, list)
    }
  }

  def getNothingMessage: String = "–ù—É –∏ –ª–∞–¥–Ω–æ\uD83E\uDD84"

}

object MarkupForReply {
  def getCommandMarkup: InlineKeyboardMarkup = InlineKeyboardMarkup {
    Seq(
      Seq(
        InlineKeyboardButton(text = "–ü–æ–ª—É—á–∏—Ç—å —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É\uD83D\uDC7B", callbackData = Some("stat")),
        InlineKeyboardButton(text = "–ü–æ–º–æ—â—å\uD83D\uDCF1", callbackData = Some("help"))
      ),
      Seq(
        InlineKeyboardButton(text = "–ù–∏—á–µ–≥–æ –Ω–µ –Ω—É–∂–Ω–æ\uD83E\uDD95", callbackData = Some("nothing"))
      )
    )
  }

  def getTranslateMarkup: InlineKeyboardMarkup = InlineKeyboardMarkup {
    Seq(
      Seq(
        InlineKeyboardButton(text = "–°–æ—Ö—Ä–∞–Ω–∏—Ç—å –≤ –Ω–µ–¥–∞–≤–Ω–∏–µ", callbackData = Some("save")),
        InlineKeyboardButton(text = "–ù–µ —Å–æ—Ö—Ä–∞–Ω—è—Ç—å", callbackData = Some("not save"))
      )
    )
  }

}
